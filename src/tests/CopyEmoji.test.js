import React from "react";
import { render, fireEvent } from "@testing-library/react";
import EmojiResultsRow from "../EmojiResultRow";

beforeAll(() => {
  navigator.clipboard = {
    writeText: jest.fn(() => Promise.resolve()),
    readText: jest.fn(() => Promise.resolve("ğŸ˜Š"))
  };
});
//navigator.clipboard, panoyu okumak ve yazmak iÃ§in kullanÄ±lan bir tarayÄ±cÄ± APIsidir. Ancak, test senaryosu tarayÄ±cÄ±nÄ±n gerÃ§ek clipboard APIsine baÄŸlÄ± olmamalÄ±dÄ±r. Bu nedenle, jest.fn() fonksiyonu kullanÄ±larak writeText() ve readText() metodlarÄ± yeniden tanÄ±mlanÄ±r.

describe("Copy Emoji", () => {
  test("TÄ±klama olayÄ± gerÃ§ekleÅŸtiÄŸinde emoji kopyalanÄ±yor mu?", async () => {
    
    const title = "100";
    const symbol = "ğŸ’¯";
    const { getByText } = render(<EmojiResultsRow title={title} symbol={symbol} />); //EmojiResultsRow bileÅŸenini render eder. 
    //getByText() fonksiyonu, title ve symbol deÄŸiÅŸkenlerinin deÄŸerlerine gÃ¶re bileÅŸenin render edildiÄŸi sanal DOMda ilgili metni arar ve geri dÃ¶ndÃ¼rÃ¼r.


    const copy = getByText("Click to copy emoji"); //getByText() fonksiyonunu kullanÄ±larak "Click to copy emoji" metnini iÃ§eren bir DOM Ã¶ÄŸesi bulunur. 

    fireEvent.click(copy);  //Click to copy emojiye tÄ±klanma olayÄ±nÄ± tetikler.

    expect(await navigator.clipboard.readText()).toEqual("ğŸ˜Š"); //Kod Ã§alÄ±ÅŸtÄ±ÄŸÄ±nda, panodaki metin "ğŸ˜Š" ile aynÄ± ise, testin geÃ§mesi iÃ§in expect fonksiyonu true deÄŸerini dÃ¶ndÃ¼rÃ¼r.
  });
});
